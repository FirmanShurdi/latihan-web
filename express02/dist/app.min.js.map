{"version":3,"sources":["app.js"],"names":["createError","require","express","cookieParser","path","usersRouter","methodOverride","app","__dirname","set","use","logger","urlencoded","extended","join","indexRouter","productsRouter","res","next","req","message","locals","get","err","status","render","module","exports"],"mappings":"aAAA,IAAIA,YAAcC,QAAQ,eACtBC,QAAUD,QAAQ,WADlBD,KAAAA,QAAcC,QAGdE,aAAeF,QAAQ,iBAFvBC,OAAOD,QAAU,UACjBG,YAAcH,QAAlB,kBAKII,YAAcJ,QAAQ,kBAJtBE,eAAeF,QAAQ,qBAMvBK,eAAiBL,QAAQ,mBAEzBM,IAAML,UAJVK,IAAIF,IAAAA,QAAWD,KAAGH,KAAQO,UAAA,UAQ1BD,IAAIE,IAAI,cAAe,OAEvBF,IAAIG,IAAIC,OAAO,QARfJ,IAAID,IAAAA,QAAAA,QAUJC,IAAIG,IAAIR,QAAQU,WAAW,CAAEC,UAAU,KARvCN,IAAIA,IAAGJ,gBAUPI,IAAIG,IAAIR,QAAO,OAAQE,KAAKU,KAAKN,UAAW,YAN5CD,IAAIE,IAAI,IAAAM,aAERR,IAAIG,IAAIC,SAAON,aACfE,IAAIG,IAAIR,YAAAc,gBACRT,IAAIG,IAAIR,eAAQU,YAChBL,IAAIG,IAAIP,SAAAA,EAARc,EAAAC,GACAX,EAAAP,YAAe,QAKfO,IAAIG,IAAIJ,SAAAA,EAAca,EAACF,EAADC,GAGtBX,EAAIG,OAAIU,QAAcH,EAAdG,QACNF,EAAIG,OAACrB,MAAL,gBAAiBmB,EAAjBZ,IAAAe,IAAA,OAAAC,EAAA,GAIFhB,EAAIG,OAAIa,EAAAC,QAAA,KACNP,EAAAQ,OAAA,WASFC,OAAOC,QAAUpB","file":"app.min.js","sourcesContent":["var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\n\nvar indexRouter = require('./routes/index');\nvar usersRouter = require('./routes/users');\nvar productsRouter = require('./routes/products');\nvar methodOverride = require('method-override');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\napp.use('/products', productsRouter);\napp.use(methodOverride('_method'));\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}